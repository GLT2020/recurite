server:
  port: 8081

spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/recurit?useSSL=false&useUnicode=true&characterEncoding=utf-8&serverTimezone=GMT%2B8
    username: root
    password: root
    hikari:
      #连接池命
      pool-name: DateHikariCP
      #最小空闲连接数
      minimum-idle: 5
      #空闲连接存货最大实际，默认600000（10分钟）
      idle-timeout: 180000
      #      最大连接数
      maximum-pool-size: 10
      #      从连接池返回的连接的自动提交
      auto-commit: true
      #      连接最大存货时间，0表示永久存货，默认1800000（30分钟）
      max-lifetime: 1800000
      #连接超时时间，默认30000（30秒）
      connection-timeout: 30000
      #      测试连接是否可用的查询语句
      connection-test-query: SELECT 1
  mvc:
    #swagger配置
    pathmatch:
      matching-strategy: ant_path_matcher
  redis:
    #    服务器地址
    host: 127.0.0.1
    #    端口
    port: 6379
    #     密码
    password: 123456
    #    选择哪个库。默认为0
    database: 0
    #    连接超时时间
    timeout: 10000ms
    lettuce:
      pool:
        #        最大连接数，默认8
        max-active: 1024
        #        最大连接阻塞等待时间，单位毫秒，默认-1ms
        max-wait: 10000ms
        #        最大空闲连接，默认8
        max-idle: 200
        #        最小空闲连接，默认0
        min-idle: 5
  main:
    allow-circular-references: true
  mail:
    #    邮件服务器地址
    host: smtp.163.com
    #    协议
    protocol: smtp
    #    编码格式
    default-encoding: utf-8
    #    授权码
    password: UXROEAHJUQZWBFSY
    #    发送者邮箱地址
    username: 13760611606@163.com
    #    端口
    port: 25




#Mybatis-plus配置
mybatis-plus:
  #  配置Mapper映射文件
  mapper-locations: classpath*:/mapper/*Mapper.xml
  #  配置mybatis数据发牛类型别名（默认别名是类名）
  type-aliases-package: com.glt.server.pojo
  configuration:
    #    自动驼峰命名 -这里关闭了
    map-underscore-to-camel-case: false
    #    打开日志输出到控制台
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl



# mybatis SQL打印（方法接口所在的包，不是Mapper，xml所在的包）
logging:
  leven:
    com.glt.server.mapper:debug


#jwt配置
jwt:
  #  jwt存储的请求头
  tokenHeader: Authorization
  #  jwt加解密使用的密钥
  secret: recurit-secret
  #  jwt的超期限时间(60*60*24)
  expiration: 604800
  #  jwt负载中拿到开头
  tokenHead: Bearer


